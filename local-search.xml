<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>快速排序</title>
    <link href="/2021/08/09/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/"/>
    <url>/2021/08/09/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/</url>
    
    <content type="html"><![CDATA[<p>最近借了些书，有本叫做<u>算法与程序设计(Python)</u>，然而里面300页只有80页在讲算法，大部分在讲Python基础，有种被骗了的感觉😞</p><p>算法部分也很多都是很基础的内容。</p><p>里面有一个讲的是快速排序，快排的大名可以说是早有耳闻了😄，但是一直没学，上学期自己去看了下大致的原理，但是没空把实现的代码写出来，也懒得去找代码。看到这本书里有快排，我满怀希望地翻到这一部分，才发现并没有给出实现的代码，也是讲了一下原理，给了大致的伪代码。现在正好无聊，就试着根据原理写写这个实现代码。</p><hr /><p>因为对Python比较熟，而且Python语法更简单，就先写快排的Python实现</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">quick_sort</span>(<span class="hljs-params">num_list: <span class="hljs-built_in">list</span></span>) -&gt; <span class="hljs-built_in">list</span>:</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(num_list) &gt; <span class="hljs-number">1</span>:  <span class="hljs-comment"># 如果长度等于1就不用排序，直接返回</span><br>        x = <span class="hljs-built_in">len</span>(num_list)//<span class="hljs-number">2</span>  <span class="hljs-comment"># 随便找一个参考数</span><br>        list_1 = []  <span class="hljs-comment"># list_1里放比参考数小的</span><br>        list_2 = []  <span class="hljs-comment"># list_2里放比参考数大的</span><br>        <span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> num_list:<br>            <span class="hljs-keyword">if</span> item &lt; num_list[x]:<br>                list_1.append(item)<br>            <span class="hljs-keyword">else</span>:<br>                list_2.append(item)<br>        <span class="hljs-comment"># 函数递归，分别对list_1,list_2进行快速排序，再合并起来</span><br>        sorted_list = quick_sort(list_1)<br>        sorted_list.append(num_list[x])<br>        sorted_list.extend(quick_sort(list_2))<br>        <span class="hljs-keyword">return</span> sorted_list<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> num_list<br></code></pre></div></td></tr></table></figure><p>一开始很顺利的写了出来，然而运行出了问题</p><p>测试代码如下</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    a = [<span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">6</span>, <span class="hljs-number">3</span>, <span class="hljs-number">2</span>, <span class="hljs-number">8</span>, <span class="hljs-number">1</span>]<br>    b = quick_sort(a)<br>    <span class="hljs-built_in">print</span>(b)<br></code></pre></div></td></tr></table></figure><p>运行后，程序报错如下</p><figure class="highlight arduino"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs arduino"><span class="hljs-built_in">Traceback</span> (most recent call last):<br>  <span class="hljs-built_in">File</span> <span class="hljs-string">&quot;****\main.py&quot;</span>, line <span class="hljs-number">20</span>, in &lt;<span class="hljs-keyword">module</span>&gt;<br>    b = <span class="hljs-built_in">quick_sort</span>(a)<br>  <span class="hljs-built_in">File</span> <span class="hljs-string">&quot;****\main.py&quot;</span>, line <span class="hljs-number">11</span>, in quick_sort<br>    sorted_list = <span class="hljs-built_in">quick_sort</span>(list_1)<br>  <span class="hljs-built_in">File</span> <span class="hljs-string">&quot;****\main.py&quot;</span>, line <span class="hljs-number">11</span>, in quick_sort<br>    sorted_list = <span class="hljs-built_in">quick_sort</span>(list_1)<br>  <span class="hljs-built_in">File</span> <span class="hljs-string">&quot;****\main.py&quot;</span>, line <span class="hljs-number">12</span>, in quick_sort<br>    sorted_list.<span class="hljs-built_in">extend</span>(<span class="hljs-built_in">quick_sort</span>(list_2))<br>  <span class="hljs-built_in">File</span> <span class="hljs-string">&quot;****\main.py&quot;</span>, line <span class="hljs-number">12</span>, in quick_sort<br>    sorted_list.<span class="hljs-built_in">extend</span>(<span class="hljs-built_in">quick_sort</span>(list_2))<br>  <span class="hljs-built_in">File</span> <span class="hljs-string">&quot;****\main.py&quot;</span>, line <span class="hljs-number">12</span>, in quick_sort<br>    sorted_list.<span class="hljs-built_in">extend</span>(<span class="hljs-built_in">quick_sort</span>(list_2))<br>  [Previous line repeated <span class="hljs-number">992</span> more times]<br>  <span class="hljs-built_in">File</span> <span class="hljs-string">&quot;****\main.py&quot;</span>, line <span class="hljs-number">11</span>, in quick_sort<br>    sorted_list = <span class="hljs-built_in">quick_sort</span>(list_1)<br>  <span class="hljs-built_in">File</span> <span class="hljs-string">&quot;****\main.py&quot;</span>, line <span class="hljs-number">2</span>, in quick_sort<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(num_list) &gt; <span class="hljs-number">1</span>:<br>RecursionError: maximum recursion depth exceeded <span class="hljs-keyword">while</span> calling a Python object<br><br>进程已结束，退出代码为 <span class="hljs-number">1</span><br></code></pre></div></td></tr></table></figure><p>其中问题的翻译如下</p><figure class="highlight"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs">RecursionError：调用 Python 对象时超出了最大递归深度<br></code></pre></div></td></tr></table></figure><p>上网查了一下</p><p>Python递归深度最多1000</p><p>但是我这里测试用的列表<code>a</code>的长度为7，按理说正常运行不会超过1000的递归深度，于是我加了打印代码，看看排序的过程如何</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;list_1:<span class="hljs-subst">&#123;list_1&#125;</span>&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;x:<span class="hljs-subst">&#123;x&#125;</span>&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;list_2:<span class="hljs-subst">&#123;list_2&#125;</span>&quot;</span>)<br></code></pre></div></td></tr></table></figure><p>输出显示当有两个数相同时(如下)会一直重复的递归</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">list_1:[]<br>x:<span class="hljs-number">1</span><br>list_2:[<span class="hljs-number">1</span>, <span class="hljs-number">1</span>]<br></code></pre></div></td></tr></table></figure><p>于是想到排序的过程中加入第三个列表，放置与参考数相同的数</p><p>改进的代码如下</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">quick_sort</span>(<span class="hljs-params">num_list: <span class="hljs-built_in">list</span></span>) -&gt; <span class="hljs-built_in">list</span>:</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(num_list) &gt; <span class="hljs-number">1</span>:<br>        x = <span class="hljs-built_in">len</span>(num_list)//<span class="hljs-number">2</span><br>        list_1 = []<br>        list_3 = []<br>        list_2 = []<br>        <span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> num_list:<br>            <span class="hljs-keyword">if</span> item &lt; num_list[x]:<br>                list_1.append(item)<br>            <span class="hljs-keyword">elif</span> item &gt; num_list[x]:<br>                list_2.append(item)<br>            <span class="hljs-keyword">else</span>:<br>                list_3.append(item)<br>        sorted_list = quick_sort(list_1)<br>        sorted_list.extend(list_3)<br>        sorted_list.extend(quick_sort(list_2))<br>        <span class="hljs-keyword">return</span> sorted_list<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> num_list<br></code></pre></div></td></tr></table></figure><p>成功运行，结果如下</p><figure class="highlight json"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs json">[<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">6</span>, <span class="hljs-number">8</span>]<br></code></pre></div></td></tr></table></figure><hr /><p>这还不够，如果测试数据大一些呢？能否正常运行？</p><p>为此，引入<code>random</code>库，继续对函数进行测试，测试代码如下</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-keyword">import</span> random<br>    n = <span class="hljs-number">10000</span><br>    a = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):<br>        a.append(random.randint(<span class="hljs-number">1</span>, n))<br>    b = quick_sort(a)<br>    <span class="hljs-built_in">print</span>(b)<br></code></pre></div></td></tr></table></figure><p>1万个数排序起来好像确实挺快的，瞬间出结果，总所周知Python的运行速度是比较慢的，所以还是挺意外的</p><hr /><p>下面进一步测试快排的性能</p><p>将其与选择排序和冒泡排序进行比较</p><p>选择排序代码如下</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">select_sort</span>(<span class="hljs-params">num_list: <span class="hljs-built_in">list</span></span>) -&gt; <span class="hljs-built_in">list</span>:</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(num_list)):<br>        <span class="hljs-built_in">min</span> = i<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(i+<span class="hljs-number">1</span>, <span class="hljs-built_in">len</span>(num_list)):<br>            <span class="hljs-keyword">if</span> num_list[j] &lt; num_list[<span class="hljs-built_in">min</span>]:<br>                <span class="hljs-built_in">min</span> = j<br>        num_list[i], num_list[<span class="hljs-built_in">min</span>] = num_list[<span class="hljs-built_in">min</span>], num_list[i]<br>    <span class="hljs-keyword">return</span> num_list<br></code></pre></div></td></tr></table></figure><p>冒泡排序代码如下</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">bubble_sort</span>(<span class="hljs-params">num_list: <span class="hljs-built_in">list</span></span>) -&gt; <span class="hljs-built_in">list</span>:</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(num_list)):<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(i + <span class="hljs-number">1</span>, <span class="hljs-built_in">len</span>(num_list)):<br>            <span class="hljs-keyword">if</span> num_list[i] &gt; num_list[j]:<br>                num_list[i], num_list[j] = num_list[j], num_list[i]<br>    <span class="hljs-keyword">return</span> num_list<br></code></pre></div></td></tr></table></figure><p>测试代码如下</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-keyword">import</span> random<br>    <span class="hljs-keyword">import</span> time<br>    <br>    n = <span class="hljs-number">10000</span><br>    a = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):<br>        a.append(random.randint(<span class="hljs-number">1</span>, n))<br><br>    t1 = time.time()<br>    b = quick_sort(a)<br>    t2 = time.time()<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;quick_sort:<span class="hljs-subst">&#123;t2-t1&#125;</span>s&quot;</span>)<br><br>    t1 = time.time()<br>    c = select_sort(a)<br>    t2 = time.time()<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;select_sort:<span class="hljs-subst">&#123;t2 - t1&#125;</span>s&quot;</span>)<br><br>    t1 = time.time()<br>    d = bubble_sort(a)<br>    t2 = time.time()<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;bubble_sort:<span class="hljs-subst">&#123;t2 - t1&#125;</span>s&quot;</span>)<br></code></pre></div></td></tr></table></figure><p>运行结果如下</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">quick_sort:<span class="hljs-number">0.013960123062133789</span>s<br>select_sort:<span class="hljs-number">1.9276304244995117</span>s<br>bubble_sort:<span class="hljs-number">1.975299596786499</span>s<br></code></pre></div></td></tr></table></figure><p>从结果来看快速排序通常情况下确实要比另外两种排序方法快的</p><hr /><p>完整代码如下</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">quick_sort</span>(<span class="hljs-params">num_list: <span class="hljs-built_in">list</span></span>) -&gt; <span class="hljs-built_in">list</span>:</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(num_list) &gt; <span class="hljs-number">1</span>:<br>        x = <span class="hljs-built_in">len</span>(num_list)//<span class="hljs-number">2</span><br>        list_1 = []<br>        list_3 = []<br>        list_2 = []<br>        <span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> num_list:<br>            <span class="hljs-keyword">if</span> item &lt; num_list[x]:<br>                list_1.append(item)<br>            <span class="hljs-keyword">elif</span> item &gt; num_list[x]:<br>                list_2.append(item)<br>            <span class="hljs-keyword">else</span>:<br>                list_3.append(item)<br>        sorted_list = quick_sort(list_1)<br>        sorted_list.extend(list_3)<br>        sorted_list.extend(quick_sort(list_2))<br>        <span class="hljs-keyword">return</span> sorted_list<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> num_list<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">select_sort</span>(<span class="hljs-params">num_list: <span class="hljs-built_in">list</span></span>) -&gt; <span class="hljs-built_in">list</span>:</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(num_list)):<br>        <span class="hljs-built_in">min</span> = i<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(i+<span class="hljs-number">1</span>, <span class="hljs-built_in">len</span>(num_list)):<br>            <span class="hljs-keyword">if</span> num_list[j] &lt; num_list[<span class="hljs-built_in">min</span>]:<br>                <span class="hljs-built_in">min</span> = j<br>        num_list[i], num_list[<span class="hljs-built_in">min</span>] = num_list[<span class="hljs-built_in">min</span>], num_list[i]<br>    <span class="hljs-keyword">return</span> num_list<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">bubble_sort</span>(<span class="hljs-params">num_list: <span class="hljs-built_in">list</span></span>) -&gt; <span class="hljs-built_in">list</span>:</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(num_list)):<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(i + <span class="hljs-number">1</span>, <span class="hljs-built_in">len</span>(num_list)):<br>            <span class="hljs-keyword">if</span> num_list[i] &gt; num_list[j]:<br>                num_list[i], num_list[j] = num_list[j], num_list[i]<br>    <span class="hljs-keyword">return</span> num_list<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-keyword">import</span> random<br>    <span class="hljs-keyword">import</span> time<br>    n = <span class="hljs-number">10000</span><br>    a = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):<br>        a.append(random.randint(<span class="hljs-number">1</span>, n))<br><br>    t1 = time.time()<br>    b = quick_sort(a)<br>    t2 = time.time()<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;quick_sort:<span class="hljs-subst">&#123;t2-t1&#125;</span>s&quot;</span>)<br><br>    t1 = time.time()<br>    c = select_sort(a)<br>    t2 = time.time()<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;select_sort:<span class="hljs-subst">&#123;t2 - t1&#125;</span>s&quot;</span>)<br><br>    t1 = time.time()<br>    d = bubble_sort(a)<br>    t2 = time.time()<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;bubble_sort:<span class="hljs-subst">&#123;t2 - t1&#125;</span>s&quot;</span>)<br><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>下学期课表</title>
    <link href="/2021/08/07/%E4%B8%8B%E5%AD%A6%E6%9C%9F%E8%AF%BE%E8%A1%A8/"/>
    <url>/2021/08/07/%E4%B8%8B%E5%AD%A6%E6%9C%9F%E8%AF%BE%E8%A1%A8/</url>
    
    <content type="html"><![CDATA[<table>    <tr><td colspan="2" rowspan="1" style="width:2%;">时间</td><td align="center" style="width:14%;">星期一</td><td align="center" style="width:14%;">星期二</td><td align="center" style="width:14%;">星期三</td><td align="center" style="width:14%;">星期四</td><td align="center" style="width:14%;">星期五</td>        </tr><tr style="height:50px;"><td rowspan="4" style="width:1%;">上午</td><td style="width:1%;">第一节</td><td align="center" rowspan="2" style="width:7%;">大学英语（三）</td><td align="center" rowspan="2" style="width:7%;">常微分方程</td><td align="center" rowspan="2" style="width:7%;">抽象代数1</td><td align="center" rowspan="2" style="width:7%;">计算机网络</td><td align="center" rowspan="2" style="width:7%;">概率论与数理统计（一）</td></tr><tr style="height:50px;"><td>第二节</td></tr><tr style="height:50px;"><td>第三节</td><td align="center" rowspan="2">数学分析（Ⅲ）</td><td align="center" rowspan="2">概率论与数理统计（一）</td><td align="center" rowspan="2">数学分析（Ⅲ）</td><td align="center" rowspan="2">计算机网络</td><td align="center" rowspan="2">常微分方程</td></tr><tr style="height:50px;"><td>第四节</td></tr><tr style="height:50px;"><td rowspan="4" style="width:1%;">下午</td><td>第五节</td><td align="center" rowspan="2">军事理论</td><td align="center" rowspan="2">普通物理实验</td><td align="center">&nbsp;</td><td align="center" rowspan="2">马克思主义基本原理概论</td><td align="center" rowspan="2">数学分析（Ⅲ）</td></tr><tr style="height:50px;"><td>第六节</td><td align="center">&nbsp;</td></tr><tr style="height:50px;"><td>第七节</td><td align="center" rowspan="2">篮球（男生）2</td><td align="center" rowspan="2">普通物理实验</td><td align="center">&nbsp;</td><td align="center">马克思主义基本原理概论</td><td align="center" rowspan="2">数学分析（Ⅲ）</td></tr><tr style="height:50px;"><td>第八节</td><td align="center">&nbsp;</td><td align="center">&nbsp;</td></tr><tr style="height:50px;"><td rowspan="3" style="width:1%;">晚上</td><td>第九节</td><td align="center" rowspan="3">统计学基础</td><td align="center" rowspan="2">拓扑学1</td><td align="center" rowspan="3">组合数学</td><td align="center" rowspan="2">数学基础讲座III</td><td align="center">&nbsp;</td></tr><tr style="height:50px;"><td>第10节</td><td align="center">&nbsp;</td></tr><tr style="height:50px;"><td>第11节</td><td align="center">&nbsp;</td><td align="center">&nbsp;</td><td align="center">&nbsp;</td></tr></table><p>周末课表还没出来，但是明确的是有</p><ul><li>离散数学</li><li>数据结构</li><li>数据库原理与设计</li></ul><p>而且</p><div class="note note-danger">            <p>周六 <em><strong>8</strong></em> 节课 周日 <em><strong>4</strong></em> 节课</p>          </div><p>高中至少还有晚自习的时间写写作业</p><p>这是真的连写作业的时间都不一定有</p><p>更何况不算计科院的离散数学</p><p>总共要上 <em><strong>8</strong></em> 门数学课</p><p>其中不乏 <u>抽象代数</u>、 <u>拓扑学</u> 、<u>组合数学</u>等有名的高难度课程</p><p>之前连数学分析都可以做到 <em><strong>一盏灯，一壶酒，一道数分做一宿</strong></em>， 这些课程更不用想象</p><p>那放假总轻松了吧？</p><p>呵呵 😊</p><p>中秋放 <em><strong>一</strong></em> 天</p><p>国庆放 <em><strong>三</strong></em> 天</p><p>别的就不用说了吧 😊</p><p><s>苦逼</s> 充实 的大学生活</p>]]></content>
    
    
    <categories>
      
      <category>日常</category>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>吐槽</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>markdown示例</title>
    <link href="/2021/08/06/markdown%E7%A4%BA%E4%BE%8B/"/>
    <url>/2021/08/06/markdown%E7%A4%BA%E4%BE%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="表格"><a class="markdownIt-Anchor" href="#表格"></a> 表格</h2><table><thead><tr><th></th><th>周一</th><th>周二</th><th>周三</th></tr></thead><tbody><tr><td>上午</td><td>睡觉</td><td>睡觉</td><td>睡觉</td></tr><tr><td>下午</td><td>睡觉</td><td>睡觉</td><td>睡觉</td></tr><tr><td>晚上</td><td>打豆豆</td><td>打豆豆</td><td>打豆豆</td></tr></tbody></table><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">import</span> scrapy<br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">from</span> weixindata.items <span class="hljs-keyword">import</span> WeixindataItem<br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TeamdataSpider</span>(<span class="hljs-params">scrapy.Spider</span>):</span><br>    name = <span class="hljs-string">&#x27;teamdata&#x27;</span><br>    start_urls = [<br>        <span class="hljs-string">&#x27;https://algo.weixin.qq.com/wealgo-bin/leaderboard/get_all_leaderboard?page_index=1&amp;page_size=10&#x27;</span>]<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">parse</span>(<span class="hljs-params">self, response</span>):</span><br>        re = json.loads(response.text)<br>        item = WeixindataItem()<br>        page = <span class="hljs-built_in">int</span>(response.url.split(<span class="hljs-string">&#x27;&amp;&#x27;</span>)[-<span class="hljs-number">2</span>].split(<span class="hljs-string">&#x27;=&#x27;</span>)[-<span class="hljs-number">1</span>])<br>        list_1 = [<br>            <span class="hljs-string">&#x27;那么多C带带我怎么了&#x27;</span>,<br>            <span class="hljs-string">&#x27;吃得粮中粮，方为狗中皇&#x27;</span>,<br>            <span class="hljs-string">&#x27;在马里亚纳海沟里学深度学习&#x27;</span>,<br>            <span class="hljs-string">&#x27;平安喜乐&#x27;</span>,<br>            <span class="hljs-string">&#x27;R&amp;Q&#x27;</span>,<br>            <span class="hljs-string">&#x27;苏大启航队&#x27;</span>,<br>            <span class="hljs-string">&#x27;HelloWorld&#x27;</span>,<br>            <span class="hljs-string">&#x27;乐乐乐&#x27;</span>,<br>            <span class="hljs-string">&#x27;long_bo_heng&#x27;</span>,<br>            <span class="hljs-string">&#x27;Krista八千鸟&#x27;</span>,<br>            <span class="hljs-string">&#x27;今晚海底捞&#x27;</span>,<br>            <span class="hljs-string">&#x27;诺飞扬&#x27;</span>,<br>            <span class="hljs-string">&#x27;twohzre小队&#x27;</span>,<br>            <span class="hljs-string">&#x27;jokers&#x27;</span>,<br>            <span class="hljs-string">&#x27;摸鱼划水&#x27;</span>]<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> re[<span class="hljs-string">&#x27;data&#x27;</span>][<span class="hljs-string">&#x27;detail&#x27;</span>]:<br>            <span class="hljs-keyword">if</span> i[<span class="hljs-string">&#x27;team_name&#x27;</span>] <span class="hljs-keyword">in</span> list_1:<br>                item[<span class="hljs-string">&#x27;team_name&#x27;</span>] = i[<span class="hljs-string">&#x27;team_name&#x27;</span>]<br>                item[<span class="hljs-string">&#x27;team_seq&#x27;</span>] = i[<span class="hljs-string">&#x27;seq&#x27;</span>]<br>                item[<span class="hljs-string">&#x27;team_score&#x27;</span>] = i[<span class="hljs-string">&#x27;score&#x27;</span>]<br>                <span class="hljs-keyword">yield</span> item<br>        <span class="hljs-built_in">print</span>(page)<br>        <span class="hljs-keyword">if</span> page &lt; <span class="hljs-number">146</span>:<br>            <span class="hljs-keyword">yield</span> scrapy.Request(<br>                url=<span class="hljs-string">&#x27;https://algo.weixin.qq.com/wealgo-bin/leaderboard/get_all_leaderboard?page_index=&#x27;</span> + <span class="hljs-built_in">str</span>(<br>                    page + <span class="hljs-number">1</span>) + <span class="hljs-string">&#x27;&amp;page_size=10&#x27;</span>)<br><br></code></pre></div></td></tr></table></figure><h2 id="公式"><a class="markdownIt-Anchor" href="#公式"></a> 公式</h2><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>b</mi><mi>n</mi></msub><mo>=</mo><mfrac><mn>1</mn><mi>π</mi></mfrac><msubsup><mo>∫</mo><mrow><mo>−</mo><mi>π</mi></mrow><mi>π</mi></msubsup><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>sin</mi><mo>⁡</mo><mi>n</mi><mi>x</mi><mtext> </mtext><mi>d</mi><mi>x</mi><mspace linebreak="newline"></mspace><mfrac><msup><mi>π</mi><mn>2</mn></msup><mn>6</mn></mfrac><mo>=</mo><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><mi mathvariant="normal">∞</mi></munderover><mfrac><mn>1</mn><msup><mi>n</mi><mn>2</mn></msup></mfrac></mrow><annotation encoding="application/x-tex">b_n=\frac{1}{\pi}\int_{-\pi}^{\pi}f(x)\sin nx\,dx\\\frac{\pi^2}{6}=\sum_{n=1}^\infty{\frac{1}{n^2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.384573em;vertical-align:-0.970281em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">π</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.414292em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.970281em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">x</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:2.177108em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.9185100000000004em;vertical-align:-1.267113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">∞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.267113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></span></p><h2 id="图片"><a class="markdownIt-Anchor" href="#图片"></a> 图片</h2><p><img src="https://cdn.jsdelivr.net/gh/suxss/image/wallroom-2880x1800-bg-f296f86.jpg" alt="图片1" /></p><h2 id="列表"><a class="markdownIt-Anchor" href="#列表"></a> 列表</h2><ol><li>吃饭</li><li>睡觉</li><li>打豆豆</li></ol><h2 id="标签"><a class="markdownIt-Anchor" href="#标签"></a> 标签</h2><div class="note note-info">            <p>关于我打豆豆这档事</p>          </div><div class="note note-danger">            <p>打豆豆很危险</p>          </div>]]></content>
    
    
    <categories>
      
      <category>测试</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
      <tag>c</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>暴打王秋阳的第一天</title>
    <link href="/2021/08/06/%E7%94%B5%E5%AD%90%E4%B9%A6%E4%B8%8B%E8%BD%BD/"/>
    <url>/2021/08/06/%E7%94%B5%E5%AD%90%E4%B9%A6%E4%B8%8B%E8%BD%BD/</url>
    
    <content type="html"><![CDATA[<p>很是快落</p><span id="more"></span><p>这几天做了个小软件，用来下载电子书</p><p><img src="https://cdn.jsdelivr.net/gh/suxss/image/ui.png" alt="主界面" /></p><p><a href="https://wwr.lanzoui.com/iNrRqsa0t8f">下载链接</a></p><p>密码： <code>1111</code></p><p><a href="https://github.com/suxss/books_downloader">开源地址</a></p><p>觉得好用就点个 <code>star</code>吧😊</p>]]></content>
    
    
    <categories>
      
      <category>日常</category>
      
    </categories>
    
    
    <tags>
      
      <tag>喜剧</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/08/06/hello-world/"/>
    <url>/2021/08/06/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></div></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo server<br></code></pre></div></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo generate<br></code></pre></div></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></div></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
